//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZeroHero {
    using MiniExcelLibs;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Xml.Serialization;
    using UnityEditor;
    using UnityEngine;
    
    
    public sealed class XmlGenerator {
        
        private static string defaultCfgPath = "D:/ZeroHero/RTSGame/Assets/Config";
        
        private static string cfgPath;
        
        private static string sheetName;
        
        private static string tableName;
        
        private static string savePath;
        
        private static System.IO.DirectoryInfo dirInfo;
        
        private static System.IO.FileInfo[] fileInfos;
        
        private static System.IO.FileStream fileStream;
        
        private static System.Xml.Serialization.XmlSerializer xmlFormatter;
        
        [UnityEditor.MenuItem("Tools/生成xml配置表")]
        public static void SaveAllCfg2Xml() {
            Directory.CreateDirectory("D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml");
            tableName = "UI表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\UI\\UI表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/UI表.xml";
            List<UICfg> uiList = MiniExcel.Query<UICfg>(cfgPath,"UI",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<string, UICfg> uiDictionary = new SerializableDictionary<string, UICfg>();
            for (int i = 0; i < uiList.Count; i++) {   UICfg cfg = uiList[i];   if(cfg.UIName!=null)uiDictionary.Add(cfg.UIName, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<string, UICfg>));
            xmlFormatter.Serialize(fileStream, uiDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "物品表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\物品\\物品表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/物品表.xml";
            List<ItemCfg> itemList = MiniExcel.Query<ItemCfg>(cfgPath,"Item",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<int, ItemCfg> itemDictionary = new SerializableDictionary<int, ItemCfg>();
            for (int i = 0; i < itemList.Count; i++) {   ItemCfg cfg = itemList[i];   if(cfg.Id!=null)itemDictionary.Add(cfg.Id, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<int, ItemCfg>));
            xmlFormatter.Serialize(fileStream, itemDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "特效表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\特效\\特效表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/特效表.xml";
            List<EffectCfg> effectList = MiniExcel.Query<EffectCfg>(cfgPath,"Effect",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<int, EffectCfg> effectDictionary = new SerializableDictionary<int, EffectCfg>();
            for (int i = 0; i < effectList.Count; i++) {   EffectCfg cfg = effectList[i];   if(cfg.Id!=null)effectDictionary.Add(cfg.Id, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<int, EffectCfg>));
            xmlFormatter.Serialize(fileStream, effectDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "相机表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\相机\\相机表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/相机表.xml";
            List<CameraCfg> cameraList = MiniExcel.Query<CameraCfg>(cfgPath,"Camera",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<string, CameraCfg> cameraDictionary = new SerializableDictionary<string, CameraCfg>();
            for (int i = 0; i < cameraList.Count; i++) {   CameraCfg cfg = cameraList[i];   if(cfg.CameraName!=null)cameraDictionary.Add(cfg.CameraName, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<string, CameraCfg>));
            xmlFormatter.Serialize(fileStream, cameraDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "击杀奖励表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\角色\\击杀奖励表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/击杀奖励表.xml";
            List<KillRewardCfg> killrewardList = MiniExcel.Query<KillRewardCfg>(cfgPath,"KillReward",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<CharacterType, KillRewardCfg> killrewardDictionary = new SerializableDictionary<CharacterType, KillRewardCfg>();
            for (int i = 0; i < killrewardList.Count; i++) {   KillRewardCfg cfg = killrewardList[i];   if(cfg.CharacterType!=null)killrewardDictionary.Add(cfg.CharacterType, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<CharacterType, KillRewardCfg>));
            xmlFormatter.Serialize(fileStream, killrewardDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "技能表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\角色\\技能表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/技能表.xml";
            List<SkillCfg> skillList = MiniExcel.Query<SkillCfg>(cfgPath,"Skill",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<int, SkillCfg> skillDictionary = new SerializableDictionary<int, SkillCfg>();
            for (int i = 0; i < skillList.Count; i++) {   SkillCfg cfg = skillList[i];   if(cfg.SkillID!=null)skillDictionary.Add(cfg.SkillID, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<int, SkillCfg>));
            xmlFormatter.Serialize(fileStream, skillDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "经验等级表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\角色\\经验等级表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/经验等级表.xml";
            List<LevelCfg> levelList = MiniExcel.Query<LevelCfg>(cfgPath,"Level",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<int, LevelCfg> levelDictionary = new SerializableDictionary<int, LevelCfg>();
            for (int i = 0; i < levelList.Count; i++) {   LevelCfg cfg = levelList[i];   if(cfg.Level!=null)levelDictionary.Add(cfg.Level, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<int, LevelCfg>));
            xmlFormatter.Serialize(fileStream, levelDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "角色属性表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\角色\\角色属性表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/角色属性表.xml";
            List<RoleAttributeCfg> roleattributeList = MiniExcel.Query<RoleAttributeCfg>(cfgPath,"RoleAttribute",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<int, RoleAttributeCfg> roleattributeDictionary = new SerializableDictionary<int, RoleAttributeCfg>();
            for (int i = 0; i < roleattributeList.Count; i++) {   RoleAttributeCfg cfg = roleattributeList[i];   if(cfg.ID!=null)roleattributeDictionary.Add(cfg.ID, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<int, RoleAttributeCfg>));
            xmlFormatter.Serialize(fileStream, roleattributeDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "角色表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\角色\\角色表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/角色表.xml";
            List<RoleCfg> roleList = MiniExcel.Query<RoleCfg>(cfgPath,"Role",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<CharacterType, RoleCfg> roleDictionary = new SerializableDictionary<CharacterType, RoleCfg>();
            for (int i = 0; i < roleList.Count; i++) {   RoleCfg cfg = roleList[i];   if(cfg.CharacterType!=null)roleDictionary.Add(cfg.CharacterType, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<CharacterType, RoleCfg>));
            xmlFormatter.Serialize(fileStream, roleDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "金币消耗表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\角色\\金币消耗表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/金币消耗表.xml";
            List<GoldCostCfg> goldcostList = MiniExcel.Query<GoldCostCfg>(cfgPath,"GoldCost",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<int, GoldCostCfg> goldcostDictionary = new SerializableDictionary<int, GoldCostCfg>();
            for (int i = 0; i < goldcostList.Count; i++) {   GoldCostCfg cfg = goldcostList[i];   if(cfg.Id!=null)goldcostDictionary.Add(cfg.Id, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<int, GoldCostCfg>));
            xmlFormatter.Serialize(fileStream, goldcostDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "阵营表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\角色\\阵营表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/阵营表.xml";
            List<CampCfg> campList = MiniExcel.Query<CampCfg>(cfgPath,"Camp",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<CampType, CampCfg> campDictionary = new SerializableDictionary<CampType, CampCfg>();
            for (int i = 0; i < campList.Count; i++) {   CampCfg cfg = campList[i];   if(cfg.CampType!=null)campDictionary.Add(cfg.CampType, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<CampType, CampCfg>));
            xmlFormatter.Serialize(fileStream, campDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "图标表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\资源\\图标表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/图标表.xml";
            List<IconCfg> iconList = MiniExcel.Query<IconCfg>(cfgPath,"Icon",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<int, IconCfg> iconDictionary = new SerializableDictionary<int, IconCfg>();
            for (int i = 0; i < iconList.Count; i++) {   IconCfg cfg = iconList[i];   if(cfg.Id!=null)iconDictionary.Add(cfg.Id, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<int, IconCfg>));
            xmlFormatter.Serialize(fileStream, iconDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "模型表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\资源\\模型表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/模型表.xml";
            List<ModleCfg> modleList = MiniExcel.Query<ModleCfg>(cfgPath,"Modle",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<int, ModleCfg> modleDictionary = new SerializableDictionary<int, ModleCfg>();
            for (int i = 0; i < modleList.Count; i++) {   ModleCfg cfg = modleList[i];   if(cfg.Id!=null)modleDictionary.Add(cfg.Id, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<int, ModleCfg>));
            xmlFormatter.Serialize(fileStream, modleDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            tableName = "资源映射表";
            cfgPath = "D:\\ZeroHero\\RTSGame\\Assets\\Config\\资源\\资源映射表.xlsx";
            savePath = "D:/ZeroHero/RTSGame/Assets/StreamingAssets/xml/资源映射表.xml";
            List<ResourceCfg> resourceList = MiniExcel.Query<ResourceCfg>(cfgPath,"Resource",ExcelType.XLSX,"A2").ToList();
            SerializableDictionary<int, ResourceCfg> resourceDictionary = new SerializableDictionary<int, ResourceCfg>();
            for (int i = 0; i < resourceList.Count; i++) {   ResourceCfg cfg = resourceList[i];   if(cfg.Id!=null)resourceDictionary.Add(cfg.Id, cfg);};
            fileStream = new FileStream(savePath, FileMode.Create);
            xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<int, ResourceCfg>));
            xmlFormatter.Serialize(fileStream, resourceDictionary);
            fileStream.Close();
            Debug.Log(savePath+"-----生成");
            AssetDatabase.Refresh();
        }
    }
}
