//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZeroHero {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using System.Xml.Serialization;
    using UnityEngine;
    using Unity.Mathematics;
    using UnityEngine.Networking;
    using System.Text;
    
    
    [Serializable()]
    public class KillRewardCfg {
        
        [XmlAttribute("CharacterType")]
        public CharacterType CharacterType{ get; set; }//;
        
        [XmlAttribute("Gold")]
        public int Gold{ get; set; }//;
        
        [XmlAttribute("Exp")]
        public float Exp{ get; set; }//;
    }
    
    public struct KillRewardStruct {
        
        public CharacterType CharacterType;
        
        public int Gold;
        
        public float Exp;
    }
    
    public sealed class KillRewardCfgMgr {
        
        private static SerializableDictionary<CharacterType, KillRewardCfg> killrewardCfgDic;
        
        public static void Init() {
            var uri = new System.Uri(Path.Combine(Application.streamingAssetsPath, "xml","击杀奖励表.xml"));
            var request = UnityWebRequest.Get(uri.AbsoluteUri);
            request.SendWebRequest();
            while (!request.isDone){ if (request.isNetworkError) { Debug.Log(request.error); return;}};
            byte[] bytes = Encoding.UTF8.GetBytes(request.downloadHandler.text);
            MemoryStream stream = new MemoryStream();
            stream.Write(bytes, 0, bytes.Length);
            stream.Position = 0;
            XmlSerializer xmlFormatter = new XmlSerializer(typeof(SerializableDictionary<CharacterType, KillRewardCfg>));;
            killrewardCfgDic = (SerializableDictionary<CharacterType, KillRewardCfg>)xmlFormatter.Deserialize(stream);;
            stream.Close();;
        }
        
        public static KillRewardCfg GetByCharacterType(CharacterType charactertype) {
            if (!killrewardCfgDic.TryGetValue(charactertype, out KillRewardCfg cfg)) {
              Debug.LogError("击杀奖励表: 配置表出错, 不存在id: "+charactertype );    
              return null;
            }
            return cfg;
        }
        
        public static List<KillRewardCfg> GetConfigList() {
            List<KillRewardCfg> list = new List<KillRewardCfg>();
            foreach (var item in killrewardCfgDic){list.Add(item.Value);};
            return list;
        }
    }
}
